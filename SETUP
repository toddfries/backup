On the backup server, to set it up:

setname=mycompany-mail
mkdir -p /etc/backup/$setname
cd /etc/backup/$setname
cat <<EOF  > conf
#
# Directory under which 1 subdir per host will be created for
# backup storage.  Size accordingly!
#
datadir=/backups

#
# Extra ssh arguments
#
#sshxtra="-o bindaddress=backup.example.com "

#
# Weekly schedule of backup levels
#
# set -A levels 6 5 4 3 2 1 7 6

# Uncomment if you want a remote mirror, set it up as a normal client
# with a writable subdir.
#
# remotemirror=mirror://user@remotehost/subdir
#

# Local Compression program
#aprog=gzip
#aopt=6
#
# Remote Compression program
#rmtaprog=gzip
#rmtaopt=6

# Notification
#notify=summary@example.com
#notifdetail=detailsPlusSummary@example.com

# Concurrence (how many parallel jobs to run)
#globalconcurrence=2
#hostconcurrence=2

# Time constraints, don't start new jobs 
#houraftertime=1
#hourbeforetime=2

EOF
/usr/local/sbin/backup-addhost $setname localhost
echo dump://localhost/ > dumplist

Per system (including the backup server which can be -s /sbin/nologin):

 OpenBSD:
  useradd -d /home/.backup -g =uid -m -s /bin/sh -G operator _backup
 Linux:
  groupadd _backup
  useradd -d /home/.backup -g _backup -m -s /bin/sh -G operator _backup


On the backup system, a crontab entry like below would be useful:

 *BSD:
  30 3 * * * su -m _backup -c "sh /usr/local/sbin/backup mycompany-mail"
